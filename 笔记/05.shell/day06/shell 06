回顾
awk 精确搜索文档
-F 定义分隔符   print
$1  $2  $3 .... $0   NR  NF   ""
正则表达式   /  /     ~    !~
字符串与数字  ==  !=  >  >=  <  <=
逻辑符号   &&   ||
运算  x++   
=============================
在awk中使用if判断
单分支:
awk '{if(/bash$/){x++}}END{print x}' user  如果找到以bash结尾的行,就把x+1,最后输出x的值

awk -F: '{if($3>=1000){x++}}END{print x}' /etc/passwd   如果第3列(UID)大于等于1000,则把x+1,,最后输出x的值

双分支:
awk -F: '{if($3>=1000){x++}else{y++}}END{print x,y}'  /etc/passwd  如果第3列(UID)大于等于1000,则把x+1,否则把y+1,最后输出x与y的值
----------------------------------------------------------
awk数组,数组可以理解为能保存多个值的特殊变量
数组名[下标]=元素值
awk 'BEGIN{a[1]=100;a[2]=200;print a[2],a[1]}'

awk 'BEGIN{a["x"]=100;a["y"]=200;print a["y"],a["x"]}'

awk 'BEGIN{a["x"]="abc";a["y"]="xyz";print a["y"],a["x"]}'
---------------------------------------------
在awk中使用数组+for循环实现遍历数组
awk 'BEGIN{a[1]=100;a[2]=200;a[3]=300;for(i in a){print i,a[i]}}'

awk '{a[$1]++}END{for(i in a){print a[i],i}}' abc

a[abc]=3
a[xyz]=2
a[zxc]=1

a[192.168.0.1]=3
a[172.10.10.10]=2
a[100.100.100.100]=1
----------------------------------------------------
使用awk统计网站访问量:
/var/log/httpd/access_log是httpd服务的访问日志

awk '{ip[$1]++}END{for(i in ip){print ip[i],i}}' /var/log/httpd/access_log   最终显示访问的次数与对应的ip地址

ab -c 1 -n 10000 http://172.25.0.11/  访问10000次

awk '{ip[$1]++}END{for(i in ip){print ip[i],i}}' /var/log/httpd/access_log | sort -nr  统计完之后再排序,访问量最大的在第一行
--------------------------------------------------
#!/bin/bash
n=`uptime |sed -n 's/.*://p'`
echo 主机平均负载是$n
ifconfig eth0 | awk '/RX p/{print "主机的eth0 网卡接收流量是"$5"字节"}'
ifconfig eth0 | awk '/TX p/{print "主机的eth0 网卡发送流量是"$5"字节"}'
free -h |awk '/^Mem/{print "主机剩余内存容量是"$4}'
df -h | awk '/\/$/{print "根分区剩余容量是"$4}'
awk 'END{print "当前主机用户总数是"NR}' /etc/passwd
w=`who | wc -l`
echo 当前登录的账户数量是$w个
p=`ps aux | wc -l`
echo 当前主机开启的进程数量是$p个
r=`rpm -qa | wc -l`
echo 当前主机安装的软件包数量是$r个












