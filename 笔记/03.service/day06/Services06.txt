rsync基本使用

rsync同步操作
• 命令用法
– rsync [选项...] 源目录   目标目录

• 同步与复制的差异
– 复制:完全拷贝源到目标
– 同步:增量拷贝,只传输变化过的数据

• rsync操作选项
– -n:测试同步过程,不做实际修改
– --delete:删除目标文件夹内多余的文档
– -a:归档模式,相当于-rlptgoD
– -v:显示详细操作信息
– -z:传输过程中启用压缩/解压


[root@svr7 ~]# mkdir /nsd10
[root@svr7 ~]# mkdir /dir
[root@svr7 ~]# cp /etc/passwd /etc/shadow /nsd10/
[root@svr7 ~]# touch /nsd10/1.txt

[root@svr7 ~]# ls /nsd10/
[root@svr7 ~]# rsync -av /nsd10   /dir  #同步目录本身

[root@svr7 ~]# ls /dir/
[root@svr7 ~]# ls /dir/nsd10/

[root@svr7 ~]# rsync -av /nsd10/  /dir   #同步目录内容
[root@svr7 ~]# ls /dir/

[root@svr7 ~]# echo 123 > /nsd10/1.txt   #仅传输变化的数据
[root@svr7 ~]# rsync -av /nsd10/  /dir 
[root@svr7 ~]# cat /dir/1.txt


[root@svr7 ~]# rsync -av --delete /nsd10/  /dir/
[root@svr7 ~]# ls /dir/

[root@svr7 ~]# touch /nsd10/{10..15}.txt
[root@svr7 ~]# ls /nsd10
[root@svr7 ~]# rsync -av --delete /nsd10/  /dir/
[root@svr7 ~]# ls /dir/

[root@svr7 ~]# touch /dir/{20..25}.txt
[root@svr7 ~]# ls /dir/
[root@svr7 ~]# rsync -av --delete /nsd10/  /dir/
[root@svr7 ~]# ls /dir/
####################################################
远程同步数据
rsync+SSH同步
• 与远程的 SSH目录保持同步
– 下行:rsync [...]  user@host:远程目录     本地目录      
– 上行:rsync [...]  本地目录      user@host:远程目录

虚拟机A：
]# rsync -av --delete  /nsd10/  root@192.168.4.207:/opt/
虚拟机B：
]# ls /opt

虚拟机A：
]# echo haha > /nsd10/1.txt 
]# cat /nsd10/1.txt
]# rsync -av --delete  /nsd10/  root@192.168.4.207:/opt/
虚拟机B：
]# ls /opt
]# cat /opt/1.txt

#######################################################
实时同步
一、生成公钥（锁）与私钥（钥匙），实现ssh无密码的验证
虚拟机A
1.生成公钥（锁）与私钥（钥匙）
[root@svr7 ~]# ssh-keygen    #一路回车

[root@svr7 ~]# ls /root/.ssh/
id_rsa(私钥)  id_rsa.pub(公钥)  
known_hosts(记录曾经远程管理过的机器)

2.传递公钥到对方主机
]# ssh-copy-id root@192.168.4.207
]# rsync -av --delete /nsd10/  root@192.168.4.207:/opt/

虚拟机B
[root@pc207 ~]# ls /root/.ssh/
authorized_keys(另一台机器传递的公钥)


二、安装inotify-tools工具软件，监控目录内容变化

1.具备inotify-tools工具软件
真机上传数据到虚拟机A
]$ ls /linux-soft/
]$ ls /linux-soft/01
]$ scp /linux-soft/01/tools.tar.gz root@192.168.4.7:/tmp/

2.虚拟机A查看是否上传成功
]# ls  /tmp

3.虚拟机A源码编译安装
步骤1:安装开发工具                                                     
[root@svr7 ~]# yum -y install  make  gcc

步骤2: tar解包,释放源代码至指定目录
]# tar -xf /tmp/tools.tar.gz -C /opt/
]# ls /opt/tools/
]# tar -xf /opt/tools/inotify-tools-3.13.tar.gz -C /
]# ls /

步骤3: ./configure 配置,指定安装目录/功能模块等选项
]# cd /inotify-tools-3.13/
]# ./configure 

步骤4: make 编译,生成可执行的二进制程序文件
]# make

步骤5: make install 安装,将编译好的文件复制到安装目录
]# make install
]# ls /usr/local/bin/inotifywait  #验证是否有该程序

#####################################################
inotifywait监控
• 基本用法
– inotifywait  [选项]   目标文件夹
• 常用命令选项
– -m,持续监控(捕获一个事件后不退出)
– -r,递归监控、包括子目录及文件
– -q,减少屏幕输出信息
– -e,指定监视的 modify、move、create、delete、attrib 等事件类别


三、书写一个shell脚本
     for循环：适合写有次数的循环
          死循环：while循环，适合次数是无限次的循环

        while 条件
        do
                  循环执行的代码
        done
[root@svr7 ~]# vim /root/rsync.sh
 #!/bin/bash
 while inotifywait -rqq  /nsd10 
 do
  rsync -a --delete /nsd10/  root@192.168.4.207:/opt/
 done

[root@svr7 ~]# chmod +x /root/rsync.sh

[root@svr7 ~]# /root/rsync.sh &   #放入后台运行
[root@svr7 ~]# jobs 
[1]+  运行中               /root/rsync.sh &

#####################################################















































